<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="export_btn.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TxbAMgSCfwHOuUdyh9bk1AAAAABJRU5ErkJggg==
</value>
  </data>
</root>